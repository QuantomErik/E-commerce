name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21'

      - name: Remove node_modules and package-lock.json
        run: |
          rm -rf frontend/node_modules
          rm -f frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build frontend project
        working-directory: ./frontend
        run: npm run build
        shell: bash

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m venv myenv
          source myenv/bin/activate
          pip install -r requirements.txt

      - name: Create .ssh directory
        run: mkdir -p $HOME/.ssh

      - name: Add SSH key and setup known hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          echo "$SSH_PRIVATE_KEY" > $HOME/.ssh/id_rsa
          chmod 600 $HOME/.ssh/id_rsa
          ssh-keyscan $SERVER_IP >> $HOME/.ssh/known_hosts
        shell: bash

      - name: Deploy to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          # Sync frontend build to server frontend directory
          rsync -avz --delete frontend/dist/ $SERVER_USER@$SERVER_IP:/var/www/ecommerce/frontend/dist/

          # Sync backend code
          rsync -avz --delete backend/ $SERVER_USER@$SERVER_IP:/var/www/ecommerce/backend/

          # SSH into the server to restart services
          ssh $SERVER_USER@$SERVER_IP << 'EOF'
            cd /var/www/ecommerce/backend
            source myenv/bin/activate
            python manage.py collectstatic --noinput
            sudo systemctl restart ecommerce-gunicorn
            sudo systemctl restart nginx
          EOF
        shell: bash
